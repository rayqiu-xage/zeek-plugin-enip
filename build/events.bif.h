// This file was automatically generated by bifcl from /home/ray/workspace/zeek-plugin-enip/src/events.bif (plugin mode).

#if defined(ZEEK_IN_NETVAR) || ! defined(_home_ray_workspace_zeek_plugin_enip_build_events_bif)
#ifndef ZEEK_IN_NETVAR
#ifndef _home_ray_workspace_zeek_plugin_enip_build_events_bif
#define _home_ray_workspace_zeek_plugin_enip_build_events_bif
#include "zeek/zeek-bif.h"
#endif
#endif

extern zeek::EventHandlerPtr enip; 
namespace zeek { namespace BifEvent {  void enqueue_enip(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t command, zeek_uint_t length, zeek_uint_t session_handle, zeek_uint_t status, zeek::IntrusivePtr<zeek::StringVal> sender_context, zeek_uint_t options);  }  }
extern zeek::EventHandlerPtr enip_data_address; 
namespace zeek { namespace BifEvent {  void enqueue_enip_data_address(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t id, zeek_uint_t length, zeek::IntrusivePtr<zeek::StringVal> data);  }  }
extern zeek::EventHandlerPtr enip_common_packet_format; 
namespace zeek { namespace BifEvent {  void enqueue_enip_common_packet_format(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t item_count);  }  }
extern zeek::EventHandlerPtr enip_target_item; 
namespace zeek { namespace BifEvent {  void enqueue_enip_target_item(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t type_code, zeek_uint_t length);  }  }
extern zeek::EventHandlerPtr enip_target_item_services; 
namespace zeek { namespace BifEvent {  void enqueue_enip_target_item_services(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t type_code, zeek_uint_t length, zeek_uint_t protocol, zeek_uint_t flags, zeek::IntrusivePtr<zeek::StringVal> name);  }  }
extern zeek::EventHandlerPtr enip_register; 
namespace zeek { namespace BifEvent {  void enqueue_enip_register(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t protocol, zeek_uint_t options);  }  }
extern zeek::EventHandlerPtr enip_list; 
namespace zeek { namespace BifEvent {  void enqueue_enip_list(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t item_count);  }  }
extern zeek::EventHandlerPtr enip_list_identity; 
namespace zeek { namespace BifEvent {  void enqueue_enip_list_identity(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t device_ip, zeek_uint_t vendor, zeek_uint_t device_type, zeek_uint_t product_code, zeek_uint_t revision_high, zeek_uint_t revision_low, zeek_uint_t status, zeek_uint_t serial_number, zeek::IntrusivePtr<zeek::StringVal> product_name, zeek_uint_t state);  }  }
extern zeek::EventHandlerPtr cip; 
namespace zeek { namespace BifEvent {  void enqueue_cip(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t service, zeek::IntrusivePtr<zeek::StringVal> data);  }  }
extern zeek::EventHandlerPtr enip_cip_debug; 
namespace zeek { namespace BifEvent {  void enqueue_enip_cip_debug(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::StringVal> raw_data);  }  }

#endif
